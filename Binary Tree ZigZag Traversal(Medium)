Qusetion Link:-https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
Question:-
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

Solution:-
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode*>q;
          vector<vector<int>>ans;
          vector<int>v;
        if(root==NULL)
            return ans;
        q.push(root);
        q.push(NULL);
               int i=1;
        while(q.empty()==false)
        {
            TreeNode* curr=q.front();
            q.pop();
            if(curr!=NULL)
            {
                v.push_back(curr->val);
                if(curr->left)
                    q.push(curr->left);
                if(curr->right)
                    q.push(curr->right);
            }
            else
            {
                if(i%2==0)
                {
                    reverse(v.begin(),v.end());
                }
                i++;
                ans.push_back(v);
                v.clear();
                if(q.size()!=0)
                    q.push(NULL);
            }
        }
 
   
            return ans;
    }
};
