Link:-https://leetcode.com/problems/search-in-rotated-sorted-array/
Question:-
Given an integer array nums sorted in ascending order, and an integer target.

Suppose that nums is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).

You should search for target in nums and if you found return its index, otherwise return -1.

 

Example 1:

Input: nums = [4,5,6,7,0,1,2], target = 0
Output: 4
Example 2:

Input: nums = [4,5,6,7,0,1,2], target = 3
Output: -1
Example 3:

Input: nums = [1], target = 0
Output: -1

class Solution {
public:
    int search(vector<int>& nums, int target) {
     int i,j,k,l,m,n,o,p,q,r;
        int mine=INT_MAX;
       n=nums.size(); 
        if(n==0)
            return -1;
        k=0;
        for(i=0;i<n;i++)
        {
            cout<<nums[i]<<endl<<mine<<i<<endl;
            if(nums[i]<mine)
            {
                mine=nums[i];
                k=i;
            }
        }
        cout<<"K="<<k;
        if(nums[k]==target)
            return k;
        
        if(target>nums[n-1])
        { l=0;
            r=k-1;}
        else
        {l=k;
            r=n-1;}
        k=-1;
        while(l<=r)
        {
            int mid=l+(r-l)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
                r=mid-1;
            else
                l=mid+1;
        }
        return k;
    }
};
