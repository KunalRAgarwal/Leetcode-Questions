Question:-
Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"


Solution:-
class Solution {
public:
    string longestPalindrome(string s) {
       if (s.length() <= 1) return s;
    int start = 0, end = 0;
    for (int i = 0; i < s.length(); i++) {
        int len1 = expandAroundCenter(s, i, i);    //This is done for input where the pallindrome string has odd length Eg:-racecar(the e over here is a prob)
        int len2 = expandAroundCenter(s, i, i + 1);
        int len = max(len1, len2);
        if (len > end - start) {
            start = i - (len - 1) / 2;
            end = i + len / 2;
        }
    }
        //cout<<start<<end;
    string ans="";
        for(int i=start;i<=end;i++)
            ans=ans+s[i];
        return ans;
}

int expandAroundCenter(string s, int left, int right) {
    int L = left, R = right;
    while (L >= 0 && R < s.length() && s[L] == s[R]) {
        L--;
        R++;
    }
    return R - L - 1;
}
};
