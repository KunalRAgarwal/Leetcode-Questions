Question Link:-https://leetcode.com/problems/binary-tree-level-order-traversal/
Question
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]
Solution:-
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(!root)
            return {};
        vector<vector<int>> result;
        vector<int> cur;
        TreeNode *node;
        queue<TreeNode *>q;
        q.push(root);
        q.push(NULL);
        while(q.empty()==false)
        {
            node=q.front();
            q.pop();
            if(node==NULL)
            {
                result.push_back(cur);
                cur.resize(0);
                if(q.size()>0)
                    q.push(NULL);
            }
            else
            {
                cur.push_back(node->val);
                if(node->left!=NULL)
                    q.push(node->left);
                if(node->right!=NULL)
                    q.push(node->right);
            }
        }
        
        return result;
    }
};
