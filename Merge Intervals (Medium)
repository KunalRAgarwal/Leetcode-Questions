Question Link:-https://leetcode.com/problems/merge-intervals/

Question
Given a collection of intervals, merge all overlapping intervals.

Example 1:

Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].
Example 2:

Input: intervals = [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.

Solution:-

class Solution {
public:
    
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
            if(intervals.size()<=1)                      //Acts as a Edge case
                return intervals;
        sort(intervals.begin(),intervals.end());      //We first sort the given input based on start time of each task
        int i,j;
        j=0;
        vector<vector<int>>ans;                         //This is the final vector which contains the answer
        ans.push_back(intervals[0]);                     //The first sorted entry is pushed as it is 
        int curr=intervals[0][1];                       //The curr stores the value of the first tasks closing time
        for(i=1;i<intervals.size();i++)
        {
            if(intervals[i][0]<=curr)
            {
                curr=max(ans[j][1],intervals[i][1]);            //This is when they overlap
                ans[j][1]=curr;
                
            }
            else
            {
                ans.push_back(intervals[i]);                //When intervals dont overlap
               curr=intervals[i][1];
                j++;
            }
        }
        return ans;
    }
};
