Question Link:-https://leetcode.com/problems/valid-parentheses/
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

solution:-

class Solution {
public:
    bool isValid(string s) {
        if(s.size()==0)
            return true;
            
        stack<char> sy;
        int i,j,k;
        j=s.size();
        for(i=0;i<j;i++)
        {
            char t=s[i];
            if(t=='{' || t=='[' || t=='(')
                sy.push(t);
            else if(t=='}' || t==']' || t==')')
            {
                if(sy.size()==0)
                    return false;
                char y=sy.top();
                sy.pop();
                 if(t=='}')
                {
                   
                    if(y=='(' || y=='[')
                        return false;
                    
                }
                       else if(t==']')
                {
                   
                    if(y=='(' || y=='{')
                        return false;
                    
                }
                    else if(t==')')
                {
                   
                    if(y=='[' || y=='{')
                        return false;
                    
                }
                
                    
            }
            else
                return false;
            
        }
        if(sy.size()>0)
            return false;
        return true;
        
    }
};
