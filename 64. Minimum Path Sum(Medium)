https://leetcode.com/problems/minimum-path-sum/
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Example:

Input:
[
  [1,3,1],
  [1,5,1],
  [4,2,1]
]
Output: 7
Explanation: Because the path 1→3→1→1→1 minimizes the sum.

Answer:-
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        vector<int>a(grid[0].size(),0);
        vector<vector<int>>v(grid.size(),a);
        int m,n,i,j,k,l,o;
        n=grid.size();
        if(n==0)
            return 0;
        m=grid[0].size();
        v[0][0]=grid[0][0];
        for(i=1;i<m;i++)
        {
            v[0][i]=v[0][i-1]+grid[0][i];
        }
        for(i=1;i<n;i++)
        {
            v[i][0]=v[i-1][0]+grid[i][0];
        }
        for(i=1;i<n;i++)
            for(j=1;j<m;j++)
            {
                v[i][j]=grid[i][j]+min(v[i-1][j],v[i][j-1]);
            }
        return v[n-1][m-1];
    }
};
